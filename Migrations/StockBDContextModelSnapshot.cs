// <auto-generated />
using System;
using GestionDeStock.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionDeStock.Migrations
{
    [DbContext(typeof(StockBDContext))]
    partial class StockBDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionDeStock.Models.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("CodigoArticulo")
                        .HasColumnType("int");

                    b.Property<int>("CodigoSubcategoria")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("SubcategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadMedidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("SubcategoriaId");

                    b.HasIndex("UnidadMedidaId");

                    b.HasIndex("CategoriaId", "CodigoSubcategoria", "CodigoArticulo");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GestionDeStock.Models.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("GestionDeStock.Models.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("DepositoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TransportistaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("DepositoId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("TransportistaId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("GestionDeStock.Models.Subcategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("CodigoSubcategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Subcategorias");
                });

            modelBuilder.Entity("GestionDeStock.Models.Transportista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transportistas");
                });

            modelBuilder.Entity("GestionDeStock.Models.UnidadMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnidadesDeMedida");
                });

            modelBuilder.Entity("GestionDeStock.Models.Articulo", b =>
                {
                    b.HasOne("GestionDeStock.Models.Marca", "Marca")
                        .WithMany("Articulos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GestionDeStock.Models.Subcategoria", "Subcategoria")
                        .WithMany("Articulos")
                        .HasForeignKey("SubcategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDeStock.Models.UnidadMedida", "UnidadMedida")
                        .WithMany("Articulos")
                        .HasForeignKey("UnidadMedidaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Marca");

                    b.Navigation("Subcategoria");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("GestionDeStock.Models.Movimiento", b =>
                {
                    b.HasOne("GestionDeStock.Models.Articulo", "Articulo")
                        .WithMany("Movimientos")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDeStock.Models.Deposito", "Deposito")
                        .WithMany("Movimientos")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GestionDeStock.Models.Proveedor", "Proveedor")
                        .WithMany("Movimientos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GestionDeStock.Models.Transportista", "Transportista")
                        .WithMany("Movimientos")
                        .HasForeignKey("TransportistaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Articulo");

                    b.Navigation("Deposito");

                    b.Navigation("Proveedor");

                    b.Navigation("Transportista");
                });

            modelBuilder.Entity("GestionDeStock.Models.Subcategoria", b =>
                {
                    b.HasOne("GestionDeStock.Models.Categoria", "Categoria")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GestionDeStock.Models.Articulo", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Categoria", b =>
                {
                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("GestionDeStock.Models.Deposito", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Marca", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Proveedor", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Subcategoria", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("GestionDeStock.Models.Transportista", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("GestionDeStock.Models.UnidadMedida", b =>
                {
                    b.Navigation("Articulos");
                });
#pragma warning restore 612, 618
        }
    }
}
